---
# ansible-role-autofs/tasks/setup_source.yml


# Need to Read, write, execute, download location for building source code
- name: "Setup | Source | ensure temporary download dir can read, write, execute"
  file:
    path: "{{ autofs_dir_tmp_download }}"
    state: directory
    mode: "u+rwx"
    owner: "{{ ansible_ssh_user }}"


- name: "Setup | Source | ensure src dir can read, write, execute"
  file:
    path: "{{ autofs_dir_src_download }}"
    state: directory
    mode: "u+rwx"
    owner: "{{ ansible_ssh_user }}"
  
  
# Download source - TAR+HTTPS
- name: "Setup | Source | ensure temporary download dir can read, write, execute"
  file:
    path: "{{ autofs_dir_tmp_download }}"
    state: directory
    mode: "u+rwx"
    owner: "{{ ansible_ssh_user }}"

- name: "Setup | Source | download autofs's src-tar(s)"
  get_url:
    url: "{{ item.0 }}"
    dest: "{{ autofs_dir_tmp_download }}/{{ item.1 }}.tar.gz"
  with_together:
    - autofs_pkg_urls
    - autofs_pkg_names
 
- name: "Setup | Source | extract autofs's src-tar(s)"
  command:
    "tar xvf {{ autofs_dir_tmp_download }}/{{ item }}.tar.gz -C {{ autofs_dir_src_download }} --strip-components=1"
  with_items: autofs_pkg_names


# Download source - Git
# @TODO


# Download source - SVN
# @TODO


# Build - Makefile
#- name: "config, build, install autofs's package(s)"
#  sudo: Yes
#  command: ./config && make && make install
#  args: 
#    chdir: "{{ autofs_dir_src_download }}/{{ item }}"
#  with_items: autofs_pkg_names


# Build - Script
# @TODO
